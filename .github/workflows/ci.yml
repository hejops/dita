name: ci

on: [push]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - name: Install dev dependencies
        run: poetry install --only=dev
      - name: Run ruff
        run: |
          poetry run ruff check

  format:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - name: Install dev dependencies
        run: poetry install --only=dev
      - name: Run ruff
        run: |
          poetry run ruff format

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # only test 3.13 to reduce discogs calls
        python-version: ["3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - name: Install the project dependencies
        run: poetry install --only=dev
      - name: Run pytest
        run: |
          poetry add pytest
          sed -i -r "/token/ s|$|${{ secrets.TEST_DISCOGS_TOKEN }}|g; /username/ s|$|${{ secrets.TEST_DISCOGS_USERNAME }}|g" ./dita/config
          poetry run pytest -x -vv $(git ls-files | grep 'test.*\.py')
